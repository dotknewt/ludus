---

- name: Install prerequisites for Ansible Gitlab
  package:
    name: "{{ package }}"
    state: latest
  loop: 
    - python3-gitlab
  loop_control:
    loop_var: package

- name: "Set gitlab_url from ip to http://{{ansible_default_ipv4.address}}"
  set_fact:
    gitlab_url: "http://{{ansible_default_ipv4.address}}"
  run_once: yes

# Get root access tokens number

- name: Check if root access token exists
  ansible.builtin.command: "gitlab-rails runner \"puts User.find_by_username('root').personal_access_tokens.size()\""
  register: root_access_tokens_size
  run_once: true

# Create root access token

- name: Create gitlab root access token
  ansible.builtin.command: "gitlab-rails runner \"token = User.find_by_username('root').personal_access_tokens.create(scopes: ['api', 'sudo'], name: 'Ansible Ludus', expires_at: 365.days.from_now); token.set_token('token-ansible-for-ludus'); token.save!\""
  when: root_access_tokens_size.stdout == "0"

# Groups

- name: Create GitLab Groups
  community.general.gitlab_group:
    api_url: "{{ gitlab_url }}"
    validate_certs: false
    api_token: "token-ansible-for-ludus"
    name: "{{ group.name }}"
    state: present
  loop: "{{ ludus_gitlab.groups }}"
  loop_control:
    loop_var: group
  when: ludus_gitlab.groups is defined

- name: Pause for 10 seconds
  ansible.builtin.pause:
    seconds: 10
  when: ludus_gitlab.groups is defined

# Users

- name: Create GitLab Users
  community.general.gitlab_user:
    api_url: "{{ gitlab_url }}"
    validate_certs: false
    api_token: "token-ansible-for-ludus"
    name: "{{ user.display_name }}"
    username: "{{ user.name }}"
    password: "{{ user.password }}"
    email: "{{ user.email }}"
    group: "{{ user.group }}"
    access_level: "{{ user.access_level }}"
    confirm: false
    state: present
  loop: "{{ ludus_gitlab.users }}"
  loop_control:
    loop_var: user
  when: ludus_gitlab.users is defined

- name: Unset password expiration for users with gitlab-rails
  ansible.builtin.command: "gitlab-rails runner \"user = User.find_by_username('{{ user.name }}'); user.password_expires_at = Time.now + 86400; user.save!\""
  loop: "{{ ludus_gitlab.users }}"
  loop_control:
    loop_var: user
  when: ludus_gitlab.users is defined