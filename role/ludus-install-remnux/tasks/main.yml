---
- name: Add the REMnux user to the host
  ansible.builtin.user:
    name: remnux
    password: "{{ 'malware' | password_hash('sha512', 'mysecretsalt') }}"
    shell: /bin/bash
  register: created_user

- name: Update all packages to their latest version
  ansible.builtin.apt:
    name: "*"
    state: latest
    update_cache: true

- name: Install requirements
  ansible.builtin.apt:
    name:
      - curl
      - gnupg
      - ubuntu-gnome-desktop
      - tigervnc-standalone-server
      - tigervnc-xorg-extension
      - tigervnc-viewer
    state: present

- name: Create a directory if it does not exist # Avoid errors with range-management tasks
  ansible.builtin.file:
    path: /etc/cloud/cloud.cfg.d/
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Enable GNOME Display Manager service
  become: true
  ansible.builtin.systemd:
    name: gdm.service
    enabled: true

- name: Check if vnc has been configured
  ansible.builtin.stat:
    path: /home/localuser/.xstartup
  register: stat_result

- name: Create .xstartup script #
  when: not stat_result.stat.exists
  ansible.builtin.copy:
    src: "{{ role_path }}/files/xstartup"
    dest: /home/localuser/.xstartup
    owner: localuser
    group: localuser
    mode: "0750"

- name: Get remnux
  ansible.builtin.get_url:
    url: https://REMnux.org/remnux-cli
    dest: /usr/local/bin/remnux
    checksum: sha256:c8c6d6830cfeb48c9ada2b49c76523c8637d95dc41d00aac345282fb47021f8e
    mode: "774"

- name: Chmod remnux
  ansible.builtin.file:
    dest: /usr/local/bin/remnux
    mode: a+x

- name: Run the REMnux installer - This will take a long time!
  ansible.builtin.shell: /usr/local/bin/remnux install --mode=cloud
  become: true
  register: remnux_install

- name: Reboot
  ansible.builtin.reboot:
  when: not remnux_install.failed

- name: Success
  ansible.builtin.debug:
    msg: "REMnux install has finished!"
