ludus:
  - vm_name: "{{ range_id }}-kali"
    hostname: "{{ range_id }}-kali"
    template: kali-x64-desktop-template
    vlan: 2
    ip_last_octet: 1
    ram_gb: 16
    cpus: 8
    linux: true
    testing:
      snapshot: true
      block_internet: true
    roles:
      - linux_config
    role_vars:
      linux_config:
        keyboard_layout: 'no'
        rdp: 'true'
        kali: 'true'
        ansible_groups: # Groups this VM will be a part of when `ludus range inventory` is run. Deploy with `ludus range deploy -t custom-group`
          - ctf
          - kali
  - vm_name: "{{ range_id }}-remnux"
    hostname: "{{ range_id }}-remnux"
    template: remnux-template # ubuntu-20.04-x64-server-template # OR remnux-template
    vlan: 2
    ip_last_octet: 2
    ram_gb: 8
    cpus: 4
    linux: true
    testing:
      snapshot: true
      block_internet: true
    roles:
      - badsectorlabs.ludus_remnux
      - linux_config
    role_vars:
      linux_config:
        keyboard_layout: 'no'
        rdp: 'true'
        username: 'remnux'
    ansible_groups:
      - ctf
      - remnux

  - vm_name: "{{ range_id }}-flare"
    hostname: "{{ range_id }}-flare"
    template: flare-vm-template
    vlan: 2
    ip_last_octet: 3
    ram_gb: 16
    cpus: 8
    testing:
      snapshot: true
      block_internet: true
    windows:
      install_additional_tools: false
    roles:
      - badsectorlabs.ludus_flarevm
      - windows_config
    role_vars:
      windows_config:
        keyboard_layout: '00000414'
        display_language: '0409'
        username: 'localuser'
        get_zimmerman_tools: 'true'
    ansible_groups:
      - ctf
      - flarevm
router:
  vm_name: "{{ range_id }}-router"
  hostname: "{{ range_id }}-router"
  template: debian-11-x64-server-template
  ram_gb: 2
  ram_min_gb: 1
  cpus: 2

network: 
  external_default: ACCEPT
  inter_vlan_default: ACCEPT
  always_blocked_networks:
    - 192.168.0.0/16
  rules:
    - name: ACCEPT INTERNAL SUBNET
      vlan_src: 254
      vlan_dst: 254
      protocol: all
      ports: all
      action: ACCEPT
    - name: DROP VLAN254 to PUBLIC
      vlan_src: 254
      vlan_dst: all
      protocol: all
      ports: all
      action: DROP
defaults:
  snapshot_with_RAM: true                  # When entering testing mode, capture the RAM state which allows reverting to a running VM
  stale_hours: 0                           # How many hours until a pre-existing snapshot should be deleted and retaken (if entering and exiting testing mode quickly)
  ad_domain_functional_level: Win2012R2    # The functional level of each Windows domain created by Ludus - options are: "Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", or "WinThreshold"
  ad_forest_functional_level: Win2012R2    # The functional level of each Windows forest created by Ludus - options are: "Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", or "WinThreshold"
  ad_domain_admin: domainadmin             # The domain admin username for every Windows domain
  ad_domain_admin_password: password       # The domain admin password for every Windows domain
  ad_domain_user: domainuser               # The domain user username for every Windows domain
  ad_domain_user_password: password        # The domain user password for every Windows domain
  ad_domain_safe_mode_password: password   # The domain safe mode password for every Windows domain
  timezone: Europe/Oslo         
